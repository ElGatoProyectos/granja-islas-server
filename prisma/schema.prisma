// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  SUPERADMIN
  ADMIN
  USER
}

model User {
  id             Int     @id @default(autoincrement())
  role           Role?
  name           String
  last_name      String
  phone          String?
  country_code   String?
  email          String?
  dni            String  @unique
  status_enabled Boolean @default(true)
  status_deleted Boolean @default(false)

  password   String
  created_at DateTime   @default(dbgenerated("CURRENT_DATE"))
  updated_at DateTime   @updatedAt @db.Timestamp()
  Supplier   Supplier[]
}

model Company {
  id                        Int      @id @default(autoincrement())
  business_name             String
  business_type             String?
  business_status           String?
  business_direction_fiscal String?
  description               String?
  user                      String
  phone                     String?
  country_code              String?
  ruc                       String   @unique
  key                       String
  status_deleted            Boolean? @default(false)

  created_at DateTime   @default(dbgenerated("CURRENT_DATE"))
  updated_at DateTime   @updatedAt
  Supplier   Supplier[]
}

//todo Proveedores
model Supplier {
  id                 Int      @id @default(autoincrement())
  company_id         Int
  user_id_created    Int?
  business_name      String
  business_type      String
  business_status    String
  business_direction String
  description        String?
  ruc                String   @unique
  status_deleted     Boolean? @default(false)

  created_at DateTime  @default(dbgenerated("CURRENT_DATE"))
  updated_at DateTime  @updatedAt
  Product    Product[]
  Bil        Bill[]

  Company Company @relation(fields: [company_id], references: [id])
  User    User?   @relation(fields: [user_id_created], references: [id])
}

//todo etiquetas que iran en la tabla producto para filtrar
model ProductLabel {
  id             Int      @id @default(autoincrement())
  title          String
  slug           String?  @unique @db.Text()
  description    String?  @db.Text()
  status_deleted Boolean? @default(false)

  DetailProductLabel DetailProductLabel[]
}

//todo productos
model Product {
  id          Int     @id @default(autoincrement())
  title       String
  description String? @db.Text()
  price       Float   @db.DoublePrecision
  slug        String? @db.Text()

  supplier_id Int?

  status_deleted Boolean? @default(false)

  created_at DateTime @default(dbgenerated("CURRENT_DATE"))
  updated_at DateTime @updatedAt

  Supplier           Supplier?            @relation(fields: [supplier_id], references: [id])
  DetailProductLabel DetailProductLabel[]
}

model DetailProductLabel {
  id               Int @id @default(autoincrement())
  product_id       Int
  product_label_id Int

  created_at DateTime @default(dbgenerated("CURRENT_DATE"))
  updated_at DateTime @updatedAt

  Label   ProductLabel? @relation(fields: [product_label_id], references: [id])
  Product Product?      @relation(fields: [product_id], references: [id])
}

//todo facturas
model Bill {
  id          Int      @id @default(autoincrement())
  num_serie   String
  num_cpe     String
  code        String
  date        DateTime @db.Date
  period      String
  ammount     Float    @default(0)
  igv         Float    @default(0.18)
  total       Float    @default(0)
  pill_status String
  paid        Float    @default(0)
  earring     Float    @default(0)
  supplier_id Int

  created_at DateTime @default(dbgenerated("CURRENT_DATE"))
  updated_at DateTime @updatedAt

  Supplier Supplier @relation(fields: [supplier_id], references: [id])
}

// pending
model Voucher {
  id               Int      @id @default(autoincrement())
  type_currency    String
  date             DateTime @db.Date
  operation_number String
  status           Boolean
}

enum NotificationStatus {
  READ
  NO_READ
}

model Notification {
  id                  Int                @id @default(autoincrement())
  title               String
  description         String
  notification_status NotificationStatus
  created_at          DateTime           @default(dbgenerated("CURRENT_DATE"))
  updated_at          DateTime           @updatedAt
}
