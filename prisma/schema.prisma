// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  SUPERADMIN
  ADMIN
  USER
}

model User {
  id             Int     @id @default(autoincrement())
  role           Role?
  name           String
  last_name      String
  phone          String?
  country_code   String?
  email          String?
  dni            String? @unique
  status_enabled Boolean @default(true)
  status_deleted Boolean @default(false)

  password     String
  created_at   DateTime       @default(dbgenerated("CURRENT_DATE"))
  updated_at   DateTime       @updatedAt @db.Timestamp()
  Supplier     Supplier[]
  ProductLabel ProductLabel[]
  Bank         Bank[]
  Bill         Bill[]
  Voucher      Voucher[]
  CreditNote   CreditNote[]
  DebitNote    DebitNote[]
  Ticket       Ticket[]
}

model Company {
  id                        Int      @id @default(autoincrement())
  business_name             String
  business_type             String?
  business_status           String?
  business_direction_fiscal String?
  description               String?
  user                      String
  phone                     String?
  country_code              String?
  ruc                       String   @unique
  key                       String
  status_deleted            Boolean? @default(false)
  client_id                 String   @default("")
  client_secret             String   @default("")

  created_at   DateTime       @default(dbgenerated("CURRENT_DATE"))
  updated_at   DateTime       @updatedAt
  Supplier     Supplier[]
  Bill         Bill[]
  ProductLabel ProductLabel[]
  Bank         Bank[]
  Voucher      Voucher[]
  CreditNote   CreditNote[]
  DebitNote    DebitNote[]
  Ticket       Ticket[]
}

model Supplier {
  id                 Int      @id @default(autoincrement())
  company_id         Int
  user_id_created    Int?
  business_name      String
  business_type      String
  business_status    String
  business_direction String
  description        String?
  ruc                String
  status_deleted     Boolean? @default(false)

  phone        String?
  country_code String?

  created_at DateTime  @default(dbgenerated("CURRENT_DATE"))
  updated_at DateTime  @updatedAt
  Product    Product[]
  Bil        Bill[]

  Company    Company      @relation(fields: [company_id], references: [id])
  User       User?        @relation(fields: [user_id_created], references: [id])
  CreditNote CreditNote[]
  DebitNote  DebitNote[]
  Ticket     Ticket[]
}

//todo etiquetas que iran en la tabla producto para filtrar
model ProductLabel {
  id              Int      @id @default(autoincrement())
  company_id      Int
  user_created_id Int
  title           String
  slug            String?  @db.Text()
  description     String?  @db.Text()
  status_deleted  Boolean? @default(false)

  Company            Company              @relation(fields: [company_id], references: [id])
  User               User                 @relation(fields: [user_created_id], references: [id])
  DetailProductLabel DetailProductLabel[]
}

model Bank {
  id              Int      @id @default(autoincrement())
  company_id      Int
  user_created_id Int
  title           String
  slug            String?  @db.Text()
  description     String?  @db.Text()
  status_deleted  Boolean? @default(false)

  Company Company   @relation(fields: [company_id], references: [id])
  User    User      @relation(fields: [user_created_id], references: [id])
  Voucher Voucher[]
}

enum TypeDocument {
  BILL
  CREDIT_NOTE
  DEBIT_NOTE
  TICKET
}

model Product {
  id           Int     @id @default(autoincrement())
  title        String
  description  String? @db.Text()
  amount       Float
  price        Float   @db.DoublePrecision
  slug         String? @db.Text()
  unit_measure String
  supplier_id  Int?

  document_type  TypeDocument? @default(BILL)
  document_id    Int?
  status_deleted Boolean?      @default(false)

  created_at DateTime @default(dbgenerated("CURRENT_DATE"))
  updated_at DateTime @updatedAt

  Supplier Supplier? @relation(fields: [supplier_id], references: [id])

  DetailProductLabel DetailProductLabel[]
}

model DetailProductLabel {
  id               Int @id @default(autoincrement())
  product_id       Int
  product_label_id Int

  created_at DateTime @default(dbgenerated("CURRENT_DATE"))
  updated_at DateTime @updatedAt

  Label   ProductLabel? @relation(fields: [product_label_id], references: [id])
  Product Product?      @relation(fields: [product_id], references: [id])
}

enum TypeCurrency {
  USD
  PEN
}

enum TypePayment {
  CREDITO
  CONTADO
}

enum TypeStatus {
  ACTIVO
  RECHAZADO
}

enum TypeStatusPayment {
  CONTADO
  CREDITO
}

enum TypeStatusCreated {
  SUNAT
  LOCAL
}

model Bill {
  id              Int  @id @default(autoincrement())
  company_id      Int?
  user_id_created Int?

  num_serie            String
  document_code        String?            @default("01")
  document_description String?            @default("FACTURA")
  num_cpe              Int
  code                 String             @unique
  issue_date           DateTime?          @db.Date
  expiration_date      DateTime?          @db.Date
  period               String
  amount_base          Float              @default(0)
  igv                  Float              @default(0)
  total                Float              @default(0)
  amount_paid          Float              @default(0)
  amount_pending       Float              @default(0)
  created_status       TypeStatusCreated  @default(SUNAT)
  bill_status          TypeStatus?        @default(ACTIVO)
  bill_status_payment  TypeStatusPayment? @default(CREDITO)
  supplier_id          Int?
  currency_code        TypeCurrency       @default(PEN)
  exchange_rate        Float              @default(0)
  created_at           DateTime           @default(dbgenerated("CURRENT_DATE"))
  updated_at           DateTime           @updatedAt

  Company  Company?  @relation(fields: [company_id], references: [id])
  Supplier Supplier? @relation(fields: [supplier_id], references: [id])
  User     User?     @relation(fields: [user_id_created], references: [id])
  Voucher  Voucher[]
}

model CreditNote {
  id              Int  @id @default(autoincrement())
  company_id      Int?
  user_id_created Int?

  document_code        String?            @default("07")
  document_description String?            @default("NOTA_CREDITO")
  num_serie            String
  num_cpe              Int
  code                 String
  issue_date           DateTime?          @db.Date
  expiration_date      DateTime?          @db.Date
  period               String
  amount_base          Float              @default(0)
  igv                  Float              @default(0)
  total                Float              @default(0)
  amount_paid          Float              @default(0)
  amount_pending       Float              @default(0)
  created_status       TypeStatusCreated  @default(SUNAT)
  bill_status          TypeStatus?        @default(ACTIVO)
  bill_status_payment  TypeStatusPayment? @default(CREDITO)
  supplier_id          Int?
  currency_code        TypeCurrency       @default(PEN)
  exchange_rate        Float              @default(0)

  created_at DateTime @default(dbgenerated("CURRENT_DATE"))
  updated_at DateTime @updatedAt

  Company             Company?              @relation(fields: [company_id], references: [id])
  Supplier            Supplier?             @relation(fields: [supplier_id], references: [id])
  User                User?                 @relation(fields: [user_id_created], references: [id])
  Voucher             Voucher[]
  CreditNoteDocuments CreditNoteDocuments[]
}

model CreditNoteDocuments {
  id                 Int       @id @default(autoincrement())
  credit_note_id     Int
  issue_date         DateTime? @db.Date
  code_type_document String
  num_serie          String
  num_cpe            Int

  CreditNote CreditNote? @relation(fields: [credit_note_id], references: [id])
}

model DebitNote {
  id              Int  @id @default(autoincrement())
  company_id      Int?
  user_id_created Int?

  document_code        String?   @default("08")
  document_description String?   @default("NOTA_DEBITO")
  num_serie            String
  num_cpe              Int
  code                 String
  issue_date           DateTime? @db.Date
  expiration_date      DateTime? @db.Date
  period               String

  amount_base         Float              @default(0)
  igv                 Float              @default(0)
  total               Float              @default(0)
  amount_paid         Float              @default(0)
  amount_pending      Float              @default(0)
  created_status      TypeStatusCreated  @default(SUNAT)
  bill_status         TypeStatus?        @default(ACTIVO) // aqui se podria considerar el estado si es activo u otro estado
  bill_status_payment TypeStatusPayment? @default(CREDITO)

  supplier_id   Int?
  currency_code TypeCurrency @default(PEN)
  exchange_rate Float        @default(0)

  created_at DateTime @default(dbgenerated("CURRENT_DATE"))
  updated_at DateTime @updatedAt

  Company  Company?  @relation(fields: [company_id], references: [id])
  Supplier Supplier? @relation(fields: [supplier_id], references: [id])
  User     User?     @relation(fields: [user_id_created], references: [id])
  Voucher  Voucher[]
}

model Ticket {
  id                   Int                @id @default(autoincrement())
  company_id           Int?
  user_id_created      Int?
  supplier_id          Int?
  document_code        String?            @default("03")
  document_description String?            @default("BOLETA")
  num_serie            String
  num_cpe              Int
  code                 String
  issue_date           DateTime?          @db.Date
  expiration_date      DateTime?          @db.Date
  period               String
  amount_base          Float              @default(0)
  igv                  Float              @default(0)
  total                Float              @default(0)
  amount_paid          Float              @default(0)
  amount_pending       Float              @default(0)
  created_status       TypeStatusCreated  @default(SUNAT)
  bill_status          TypeStatus?        @default(ACTIVO) // aqui se podria considerar el estado si es activo u otro estado
  bill_status_payment  TypeStatusPayment? @default(CREDITO)
  currency_code        TypeCurrency       @default(PEN)
  exchange_rate        Float              @default(0)

  created_at DateTime @default(dbgenerated("CURRENT_DATE"))
  updated_at DateTime @updatedAt

  Company  Company?  @relation(fields: [company_id], references: [id])
  Supplier Supplier? @relation(fields: [supplier_id], references: [id])
  User     User?     @relation(fields: [user_id_created], references: [id])
  Voucher  Voucher[]
}

enum StatusVoucher {
  APPROVED
  REFUSED
  PENDING
}

model Voucher {
  id               Int           @id @default(autoincrement())
  bank_id          Int
  bill_id          Int
  company_id       Int
  user_id_created  Int?
  operation_number String
  amount           Float
  type_currency    TypeCurrency
  exchange_rate    Float         @default(0)
  date             DateTime      @default(now()) @db.Date
  status           StatusVoucher @default(PENDING)
  status_deleted   Boolean       @default(false)

  Bank         Bank        @relation(fields: [bank_id], references: [id])
  Bill         Bill        @relation(fields: [bill_id], references: [id])
  Company      Company     @relation(fields: [company_id], references: [id])
  User         User?       @relation(fields: [user_id_created], references: [id])
  CreditNote   CreditNote? @relation(fields: [creditNoteId], references: [id])
  creditNoteId Int?
  DebitNote    DebitNote?  @relation(fields: [debitNoteId], references: [id])
  debitNoteId  Int?
  Ticket       Ticket?     @relation(fields: [ticketId], references: [id])
  ticketId     Int?
}

enum NotificationStatus {
  READ
  NO_READ
}

model Notification {
  id                  Int                @id @default(autoincrement())
  title               String
  description         String
  notification_status NotificationStatus
  created_at          DateTime           @default(dbgenerated("CURRENT_DATE"))
  updated_at          DateTime           @updatedAt
}
